name: source_docker

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      compile_version:
        description: 'Version'
        required: true
        default: docker
        type: choice
        options:
        - docker
        - full
        - stable
        - beggar
  # schedule:
  #   - cron: 0 17 * * *
  # watch:
  #   types: started

env:
  REPO_URL: https://github.com/DHDAXCW/lede-rockchip
  REPO_BRANCH: stable
  CONFIG_FILE: configs/lean/lean_${{ inputs.compile_version }}.config
  DIY_SH: scripts/lean.sh
  KMODS_IN_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  IMAGE: milespoupart/action-openwrt-cache:r5s-r5c_${{ inputs.compile_version }}
  COMMIT_ID: ${{ vars.COMMIT_ID }}

jobs:

  source-code:
    runs-on: ubuntu-22.04
    outputs:
      OPENWRTROOT: ${{ steps.update.outputs.OPENWRTROOT }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        free -h
        uname -a
        [ -f /proc/version ] && cat /proc/version
        [ -f /etc/issue.net ] && cat /etc/issue.net
        [ -f /etc/issue ] && cat /etc/issue
        ulimit -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install rdate zstd
        # sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/MilesPoupart/openwrt-list/master/depends-ubuntu-2204) tree
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        
    - name: Clone Source Code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        
    # - name: Reset Version
    #   id: reset
    #   run: |
    #     cd openwrt
    #     echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
    #     echo "OPENWRTROOT=$PWD" >> $GITHUB_OUTPUT
    #     echo "COMMIT_ID version: $COMMIT_ID"
    #     git reset --hard $COMMIT_ID
    #     rm -rf .git

    - name: Update Feeds
      id: update
      run: |
        cd openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
        echo "OPENWRTROOT=$PWD" >> $GITHUB_OUTPUT
        mkdir customfeeds
        git clone --depth=1 https://github.com/MilesPoupart/packages customfeeds/packages
        git clone --depth=1 https://github.com/MilesPoupart/luci customfeeds/luci
        chmod +x ../scripts/*.sh
        ../scripts/hook-feeds.sh

    - name: MOD index file
      run: |
         cd $OPENWRTROOT/package/lean/autocore/files/arm
         sed -i '/Load Average/i\\t\t<tr><td width="33%"><%:Github %></td><td><a href="https://github.com/MilesPoupart/NanoPi-R5S-R5C"><%:固件下载%></a></td></tr>' index.htm

    - name: Install Feeds
      run: |
        cd $OPENWRTROOT
        cat feeds.conf.default
        ./scripts/feeds install -a
        
    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files $OPENWRTROOT/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRTROOT/.config
        chmod +x scripts/*.sh
        cd $OPENWRTROOT
        ../$DIY_SH
        ../scripts/preset-clash-core.sh arm64
        ../scripts/preset-terminal-tools.sh
        make defconfig
        
    - name: Download Package
      id: package
      run: |
        cd $OPENWRTROOT
        # cat .config
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
  
    - name: Comporession
      run: |
        tar --zstd -cf openwrt.tar.zst ./openwrt

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ env.IMAGE }}
        
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
